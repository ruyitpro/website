[{"content":"My Experience Taking the AZ-900 Azure Fundamentals Exam One of my former colleagues mentioned that he had just earned his Azure Fundamentals certification as it was required by his employer. He described it as a simple and easy exam to pass, and he suggested I do the same. Considering I was planning to get into \u0026quot;the cloud\u0026quot; for some time, I saw this as the perfect opportunity. After procrastinating for months, I finally decided to take advantage of my CBT Nuggets subscription, kindly provided by my employer, and watched the 9-hour video series covering the exam.\nDuring my day, I managed to find 30 to 40 minutes to watch the videos at 2x speed and take notes since most of the concepts were familiar to me. For some topics, I had to watch the videos twice to ensure I fully understood them, especially those explaining how Azure is structured and where to find what you need. It took me 6 days to complete this.\nAfter completing the CBT Nuggets series, I moved on to ( John Savill's Technical Training YouTube playlist ). However, when I reached 40% progress on this playlist, I realized that it was mostly repeating what I had already learned from the CBT Nuggets course. So, I decided to go for it and booked my test just two days later.\nThe day before my test, I took four practice tests on the Microsoft official site ( Practice Test ). I scored between 85 and 98 on these practice tests, which boosted my confidence.\nThis was my first certification using OnVUE, the at-home option from PEARSON VUE. The process was straightforward after watching a couple of YouTube videos and following all the tips, such as keeping my room as empty as possible, having nothing on my desktop, and not drinking too much water before the test (bathroom breaks are not allowed). Fortunately, I encountered no issues at all. The proctor was nice, and after a quick check of my desk, he launched the test. With less than 40 questions, I completed the exam in 25 minutes and received immediate notification that I had passed.\nAll this process took me two weeks in total. While I was happy to pass, I felt somewhat underprepared, as there were a few questions that I wasn't entirely sure how to answer. Nevertheless, it was a quick win for me, providing a formal understanding of the basics of the cloud and earning me a nice and shiny badge\u0026mdash;a good starting point to explore deeper and pursue associate-level certifications from either AWS or Azure.\n","permalink":"https://www.ruyitpro.com/post/azurefundamentals/","summary":"My Experience Taking the AZ-900 Azure Fundamentals Exam One of my former colleagues mentioned that he had just earned his Azure Fundamentals certification as it was required by his employer. He described it as a simple and easy exam to pass, and he suggested I do the same. Considering I was planning to get into \u0026quot;the cloud\u0026quot; for some time, I saw this as the perfect opportunity. After procrastinating for months, I finally decided to take advantage of my CBT Nuggets subscription, kindly provided by my employer, and watched the 9-hour video series covering the exam.","title":"Azure Fundamentals"},{"content":"Add a Syslog Server to all your Meraki MX devices using ANSIBLE. List all the MERAKI devices on your organization. (Or the ones you want to affect with this playbook)\nOne easy way to do that is to use POSTMAN. We can take advantage of the MERAKI collection available. For this case we will use the List the Netowrks in an Organitation API call\nGET {{baseUrl}}/organizations/:organizationId/networks This API call will return the list of all networks (in our cas all of them are MX devices). We can use that information to feed an invetory file on ANSIBLE or we can use the directly as I did on this case.\nANSIBLE PLAYBOOK For this case I will be using the Meraki Syslog module. You see the documentation on this link.\nhttps://docs.ansible.com/ansible/latest/collections/cisco/meraki/meraki_syslog_module.html#ansible-collections-cisco-meraki-meraki-syslog-module\nThis is the actual YAML file that I used to change the SYSLOG servers on all my Merakidevices.\n--- - name: Query syslog configurations on network named MyNet in the YourOrg organization connection: local hosts: localhost #gather_facts: false tasks: - name: Syslog meraki_syslog: auth_key: xxxxxxx state: present org_id: 1234 net_id: \u0026#34;{{ item }}\u0026#34; servers: - host: 192.168.1.50 port: 514 roles: - Flows - URLs - Security Events - Appliance event log output_level: debug register: syslog_servers_1 loop: - L_123 - L_456 - L_0931 - L_03435 - L_43252 - L_2345 - L_1314 - L_134245 - L_123255 - L_1456 - L_12343256 - L_12345 - L_431245 - L_13245 - L_12325 - L_347645787 - L_2354236 - L_02375 - name: Debug debug: msg: \u0026#34;{{ syslog_servers_1 }}\u0026#34; delegate_to: localhost To run the playbook use the folowwing command:\nansible-playbook Meraki\\_filename.yaml This is probably the simplest way to use Ansiblle to do this. A cleaneer version would be to use an inventory file. This was actually my first Ansible Palybook so I will be making improvements and posting them here.\nThank you for reading\n","permalink":"https://www.ruyitpro.com/post/firstansibleplaybook/","summary":"Add a Syslog Server to all your Meraki MX devices using ANSIBLE. List all the MERAKI devices on your organization. (Or the ones you want to affect with this playbook)\nOne easy way to do that is to use POSTMAN. We can take advantage of the MERAKI collection available. For this case we will use the List the Netowrks in an Organitation API call\nGET {{baseUrl}}/organizations/:organizationId/networks This API call will return the list of all networks (in our cas all of them are MX devices).","title":"First Ansible Playbook"},{"content":"This site was created based on this video https://www.youtube.com/watch?v=hjD9jTi_DQ4\n","permalink":"https://www.ruyitpro.com/post/article2/","summary":"This site was created based on this video https://www.youtube.com/watch?v=hjD9jTi_DQ4","title":"Reference Sites"}]